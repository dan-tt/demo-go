version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: demo-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: demo_clean
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Go Web Server (Clean Architecture)
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo-api-server
    restart: unless-stopped
    environment:
      # Server configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      
      # Repository configuration
      REPOSITORY_TYPE: mongodb
      
      # MongoDB configuration
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/demo_clean?authSource=admin
      MONGODB_DATABASE: demo_clean
      MONGODB_TIMEOUT: 10s
      MONGODB_MAX_POOL_SIZE: 100
      
      # JWT configuration
      JWT_SECRET_KEY: super-secret-jwt-key-for-production-change-this
      JWT_EXPIRATION: 24h
      JWT_ISSUER: demo-clean-api-docker
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  # MongoDB Express (Database UI - Optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: demo-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - demo-network

  # Test Client (Optional - for testing)
  test-client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: demo-test-client
    environment:
      API_BASE_URL: http://api-server:8080
    depends_on:
      api-server:
        condition: service_healthy
    networks:
      - demo-network
    profiles:
      - testing

volumes:
  mongodb_data:
    driver: local

networks:
  demo-network:
    driver: bridge
